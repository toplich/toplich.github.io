[{"categories":["linux"],"content":"🔐 Setting Up SSH Keys on Linux (Step-by-Step Guide) Using SSH keys is a safer and easier way to connect to Linux servers — no more typing your password every time. This guide will help you set up SSH keys, copy them to a remote server, and log in securely. ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:0:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"✅ Step 1: Check If You Already Have SSH Keys Open your terminal and run: ls ~/.ssh/id_*.pub If you see a file like id_ed25519.pub or id_rsa.pub, it means you already have a key. You can use that one or create a new one. ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:1:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"🛠 Step 2: Create a New SSH Key Pair To make a new SSH key, run: ssh-keygen -t ed25519 -C \"your_email@example.com\" On older systems, use ssh-keygen -t rsa -b 4096 instead. Press Enter to accept the default location (~/.ssh/id_ed25519) You can choose to add a passphrase (or leave it empty) This creates two files: id_ed25519 → your private key (keep it secret!) id_ed25519.pub → your public key (you’ll share this) ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:2:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"📤 Step 3: Add Your Public Key to the Remote Server ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:3:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"Option 1: Use ssh-copy-id (recommended) ssh-copy-id username@remote_server_ip This command adds your key to the remote server so you can log in without a password. ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:3:1","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"Option 2: Manual method Show your public key: cat ~/.ssh/id_ed25519.pub Copy the whole line Connect to your server and paste it into: nano ~/.ssh/authorized_keys ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:3:2","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"🚀 Step 4: Log In Without a Password Now try logging in: ssh username@remote_server_ip If everything is correct, you’ll connect without entering a password 🎉 ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:4:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"🔒 Step 5 (Optional): Turn Off Password Login This step is for extra security. Only do it if SSH keys are working! Open SSH settings on the server: sudo nano /etc/ssh/sshd_config Find and change these lines: PasswordAuthentication no ChallengeResponseAuthentication no UsePAM no Save and restart SSH: sudo systemctl restart sshd ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:5:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"💡 Helpful Tips Your private key must stay private (~/.ssh/id_ed25519) A passphrase adds extra protection Use an SSH config file to manage many servers: Create or edit this file: nano ~/.ssh/config Add this block: Host myserver HostName 192.168.1.10 User vitalii IdentityFile ~/.ssh/id_ed25519 Then you can connect by simply running: ssh myserver ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:6:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["linux"],"content":"🧩 Summary SSH keys help you: Log in faster Avoid typing passwords Stay secure Now you’re ready to manage your servers like a pro — safely and efficiently! ","date":"2025-05-28","objectID":"/posts/ssh-keys-linux/:7:0","tags":["SSH","Linux","Security"],"title":"How to Set Up SSH Keys on Linux","uri":"/posts/ssh-keys-linux/"},{"categories":["networking"],"content":"OPNsense is a powerful open-source firewall and routing platform based on FreeBSD. ","date":"2025-05-26","objectID":"/posts/opnsense/:0:0","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"1.1 Installing as VM Download the ISO Architecture: amd64 Image type: DVD ISO General VM Settings OS Type → FreeBSD (64-bit) Option Minimum My conf Recommended CPU 1 cores 2 cores multi core Memory 512 MB 2 GB ≥ 4 GB Disk Size 8 GB 16 GB 120 GB First-time login credentials: Username: installer Password: opnsense After logging in, the system will automatically launch the text-based installer. Accept license and keyboard layout Choose Install (UFS) or (ZFS) Select target disk Set a new password for the root user Wait for installation to complete Remove the ISO and reboot ","date":"2025-05-26","objectID":"/posts/opnsense/:1:0","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"1.2 First Login to OPNsense After reboot, you can log: From LAN network: https://opnsense.localdomain or https://192.168.1.1 From WAN we need disable Firewall (Shell): pfctl -d Default credentials: Username: root Password: opnsense 👉 System \u003e Wizard General Setup Set hostname, domain (optional), and DNS servers. Select your time zone. Configure interfaces (WAN / LAN). Set a new root password. ","date":"2025-05-26","objectID":"/posts/opnsense/:1:1","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"1.3 Configure WEB access from WAN 👉 Firewall \u003e Rules \u003e WAN add new Rule Protocol: TCP Destination: WAN address Destination port range From: (other) 8080 To: (other) 8080 👉 System \u003e Settings \u003e Administration Protocol: HTTPS access TCP Port: 8080 👉 System \u003e Firmware \u003e Plugins Install os-vmware ","date":"2025-05-26","objectID":"/posts/opnsense/:1:2","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"1.4 System Updates and Backup Configuration 👉 System \u003e Firmware \u003e Status Click Check for updates → then Apply updates. 👉 System \u003e Configuration \u003e Backups Download a local .xml backup of your configuration. You can also enable automatic backups to cloud services like Google Drive, Nextcloud, etc. ","date":"2025-05-26","objectID":"/posts/opnsense/:1:3","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"Useful Resources 📚 Official OPNsense Documentation 🎥 YouTube: OPNsense Tutorials ","date":"2025-05-26","objectID":"/posts/opnsense/:2:0","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"2.1 WireGuard Site-to-Site VPN Setup WireGuard is a fast and modern VPN solution known for its simplicity and performance. ✅ What You’ll Need Two OPNsense firewalls with internet access (Site A and Site B) Static or dynamic public IPs (DDNS works) Site A -\u003e WAN IP 203.0.113.1 and LAN IP 192.168.1.1/24 Site B -\u003e WAN IP 203.0.113.2 and LAN IP 192.168.2.1/24 WireGuard plugin installed (os-wireguard) ","date":"2025-05-26","objectID":"/posts/opnsense/:3:0","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"2.2 Create WireGuard Instance 👉 VPN \u003e WireGuard \u003e Instances Click + Add to create a new instance. Enabled Name: site-a on Site A / site-b on Site B Click ⚙️ Generate new keypair Listen Port 51820 Tunnel Address Site A: 10.2.2.1/24 Site B: 10.2.2.2/24 Peers: it will be needed after peer created 💾 Press Save and Apply ⚠️ After saving, copy the Public Key. You’ll need it on the remote site. ","date":"2025-05-26","objectID":"/posts/opnsense/:3:1","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"2.3 Configure Peer 👉 VPN \u003e WireGuard \u003e Peers Click + Add to create a new peer. Enabled Name: site-b on Site A / site-a on Site B Public Key of the remote site Allowed IPs: remote local subnet and Instance IP On Site A: 10.2.2.2/32 192.168.2.0/24 On Site B: 10.2.2.1/32 192.168.1.0/24 Endpoint Address: remote WAN IP (or DDNS) On Site A: 203.0.113.2 On Site B: 203.0.113.1 Endpoint Port: 51820 💾 Press Save and Apply ⚠️ Now go back to Instances, edit your instance, and add this peer to Peers. 💾 Press Save and Apply Enable WireGuard and 💾 Press Apply ","date":"2025-05-26","objectID":"/posts/opnsense/:3:2","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"2.4 Create Interfaces 👉 Interfaces \u003e Assignments Assign the new WireGuard interface (wg0) Enable it: Set name: WG_SITEA / WG_SITEB 💾 Press Save and Apply ","date":"2025-05-26","objectID":"/posts/opnsense/:3:3","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"2.5 Set Up Firewall Rules 👉 Firewall \u003e Settings \u003e Normalization Interface: WireGuard (Group) Direction: Any Protocol: any Source: any Destination: any Destination port: any Description: Wireguard MSS Clamping Max mss: 1380 or lower, subtract at least 40 bytes from the Wireguard MTU 👉 Firewall \u003e Rules \u003e WAN Action: Pass Interface: WAN Direction: In TCP/IP Version: IPv4 Protocol: UDP Source: Remote WAN IP On Site A: 203.0.113.1 On Site B: 203.0.113.2 Destination: WAN address Destination port: 51820 Description: On Site A: Allow Wireguard from Site B to Site A On Site B: Allow Wireguard from Site A to Site B 👉 Firewall \u003e Rules \u003e LAN Action: Pass Interface: LAN Direction: In TCP/IP Version: IPv4 Protocol: Any Source: Remote LAN IP On Site A: 192.168.2.0/24 On Site B: 192.168.1.0/24 Destination: LAN net Destination port: 51820 Description: On Site A: Allow LAN Site B to LAN Site A On Site B: Allow LAN Site A to LAN Site B 👉 Firewall \u003e Rules \u003e Wireguard (Group) Action: Pass Interface: Wireguard (Group) Direction: In TCP/IP Version: IPv4 Protocol: Any Source: Remote LAN IP On Site A: 192.168.2.0/24 On Site B: 192.168.1.0/24 Destination: LAN net Destination port: 51820 Description: On Site A: Allow LAN Site B to LAN Site A On Site B: Allow LAN Site A to LAN Site B 👉 VPN \u003e WireGuard \u003e Status ✅ Check for handshake and endpoint status. 👉 Interfaces \u003e Diagnostics \u003e Ping Try pinging remote LAN IP (e.g., from 192.168.1.1 → 192.168.2.1) ","date":"2025-05-26","objectID":"/posts/opnsense/:3:4","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"},{"categories":["networking"],"content":"Useful Resources 📚 Official OPNsense Documentation 📝 Published on blog.topli.ch ","date":"2025-05-26","objectID":"/posts/opnsense/:4:0","tags":["Firewall","OPNsense","Network","VPN","WireGuard"],"title":"OPNsense Setup: Basic Guide","uri":"/posts/opnsense/"}]